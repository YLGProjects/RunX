// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base.proto
// Protobuf C++ Version: 6.30.2

#ifndef base_2eproto_2epb_2eh
#define base_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_base_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_base_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_base_2eproto;
}  // extern "C"
namespace ylg {
namespace internal {
enum AgentState : int;
extern const uint32_t AgentState_internal_data_[];
class PluginBase;
struct PluginBaseDefaultTypeInternal;
extern PluginBaseDefaultTypeInternal _PluginBase_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PluginBase_class_data_;
}  // namespace internal
}  // namespace ylg
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ylg::internal::AgentState_internal_data_>
    internal::EnumTraitsImpl::value<::ylg::internal::AgentState>;
}  // namespace protobuf
}  // namespace google

namespace ylg {
namespace internal {
enum AgentState : int {
  Offine = 0,
  Online = 1,
  AgentState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AgentState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t AgentState_internal_data_[];
inline constexpr AgentState AgentState_MIN =
    static_cast<AgentState>(0);
inline constexpr AgentState AgentState_MAX =
    static_cast<AgentState>(1);
inline bool AgentState_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int AgentState_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AgentState_descriptor();
template <typename T>
const std::string& AgentState_Name(T value) {
  static_assert(std::is_same<T, AgentState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AgentState_Name().");
  return AgentState_Name(static_cast<AgentState>(value));
}
template <>
inline const std::string& AgentState_Name(AgentState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AgentState_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool AgentState_Parse(
    absl::string_view name, AgentState* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<AgentState>(AgentState_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class PluginBase final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ylg.internal.PluginBase) */ {
 public:
  inline PluginBase() : PluginBase(nullptr) {}
  ~PluginBase() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PluginBase* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PluginBase));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PluginBase(::google::protobuf::internal::ConstantInitialized);

  inline PluginBase(const PluginBase& from) : PluginBase(nullptr, from) {}
  inline PluginBase(PluginBase&& from) noexcept
      : PluginBase(nullptr, std::move(from)) {}
  inline PluginBase& operator=(const PluginBase& from) {
    CopyFrom(from);
    return *this;
  }
  inline PluginBase& operator=(PluginBase&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PluginBase& default_instance() {
    return *reinterpret_cast<const PluginBase*>(
        &_PluginBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PluginBase& a, PluginBase& b) { a.Swap(&b); }
  inline void Swap(PluginBase* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PluginBase* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PluginBase* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PluginBase>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PluginBase& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PluginBase& from) { PluginBase::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PluginBase* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ylg.internal.PluginBase"; }

 protected:
  explicit PluginBase(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PluginBase(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PluginBase& from);
  PluginBase(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PluginBase&& from) noexcept
      : PluginBase(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kVersionFieldNumber = 2,
    kLogLevelFieldNumber = 3,
    kInstalledLocationFieldNumber = 4,
    kInstalledTimestampFieldNumber = 5,
    kStartedTimestampFieldNumber = 6,
    kRunningDurationFieldNumber = 7,
  };
  // string _name = 1;
  void clear__name() ;
  const std::string& _name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable__name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release__name();
  void set_allocated__name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal__name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set__name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable__name();

  public:
  // string _version = 2;
  void clear__version() ;
  const std::string& _version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__version(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable__version();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release__version();
  void set_allocated__version(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal__version() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set__version(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable__version();

  public:
  // string _logLevel = 3;
  void clear__loglevel() ;
  const std::string& _loglevel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__loglevel(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable__loglevel();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release__loglevel();
  void set_allocated__loglevel(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal__loglevel() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set__loglevel(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable__loglevel();

  public:
  // string _installedLocation = 4;
  void clear__installedlocation() ;
  const std::string& _installedlocation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__installedlocation(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable__installedlocation();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release__installedlocation();
  void set_allocated__installedlocation(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal__installedlocation() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set__installedlocation(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable__installedlocation();

  public:
  // uint64 _installedTimestamp = 5;
  void clear__installedtimestamp() ;
  ::uint64_t _installedtimestamp() const;
  void set__installedtimestamp(::uint64_t value);

  private:
  ::uint64_t _internal__installedtimestamp() const;
  void _internal_set__installedtimestamp(::uint64_t value);

  public:
  // uint64 _startedTimestamp = 6;
  void clear__startedtimestamp() ;
  ::uint64_t _startedtimestamp() const;
  void set__startedtimestamp(::uint64_t value);

  private:
  ::uint64_t _internal__startedtimestamp() const;
  void _internal_set__startedtimestamp(::uint64_t value);

  public:
  // uint64 _runningDuration = 7;
  void clear__runningduration() ;
  ::uint64_t _runningduration() const;
  void set__runningduration(::uint64_t value);

  private:
  ::uint64_t _internal__runningduration() const;
  void _internal_set__runningduration(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.PluginBase)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PluginBase& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr _name_;
    ::google::protobuf::internal::ArenaStringPtr _version_;
    ::google::protobuf::internal::ArenaStringPtr _loglevel_;
    ::google::protobuf::internal::ArenaStringPtr _installedlocation_;
    ::uint64_t _installedtimestamp_;
    ::uint64_t _startedtimestamp_;
    ::uint64_t _runningduration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PluginBase_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PluginBase

// string _name = 1;
inline void PluginBase::clear__name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PluginBase::_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._name)
  return _internal__name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PluginBase::set__name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_._name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._name)
}
inline std::string* PROTOBUF_NONNULL PluginBase::mutable__name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__name();
  // @@protoc_insertion_point(field_mutable:ylg.internal.PluginBase._name)
  return _s;
}
inline const std::string& PluginBase::_internal__name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._name_.Get();
}
inline void PluginBase::_internal_set__name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_._name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL PluginBase::_internal_mutable__name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_._name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE PluginBase::release__name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ylg.internal.PluginBase._name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_._name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_._name_.Set("", GetArena());
  }
  return released;
}
inline void PluginBase::set_allocated__name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_._name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_._name_.IsDefault()) {
    _impl_._name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.PluginBase._name)
}

// string _version = 2;
inline void PluginBase::clear__version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PluginBase::_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._version)
  return _internal__version();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PluginBase::set__version(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_._version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._version)
}
inline std::string* PROTOBUF_NONNULL PluginBase::mutable__version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__version();
  // @@protoc_insertion_point(field_mutable:ylg.internal.PluginBase._version)
  return _s;
}
inline const std::string& PluginBase::_internal__version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._version_.Get();
}
inline void PluginBase::_internal_set__version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_._version_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL PluginBase::_internal_mutable__version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_._version_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE PluginBase::release__version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ylg.internal.PluginBase._version)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_._version_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_._version_.Set("", GetArena());
  }
  return released;
}
inline void PluginBase::set_allocated__version(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_._version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_._version_.IsDefault()) {
    _impl_._version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.PluginBase._version)
}

// string _logLevel = 3;
inline void PluginBase::clear__loglevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._loglevel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& PluginBase::_loglevel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._logLevel)
  return _internal__loglevel();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PluginBase::set__loglevel(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_._loglevel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._logLevel)
}
inline std::string* PROTOBUF_NONNULL PluginBase::mutable__loglevel()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__loglevel();
  // @@protoc_insertion_point(field_mutable:ylg.internal.PluginBase._logLevel)
  return _s;
}
inline const std::string& PluginBase::_internal__loglevel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._loglevel_.Get();
}
inline void PluginBase::_internal_set__loglevel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_._loglevel_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL PluginBase::_internal_mutable__loglevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_._loglevel_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE PluginBase::release__loglevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ylg.internal.PluginBase._logLevel)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_._loglevel_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_._loglevel_.Set("", GetArena());
  }
  return released;
}
inline void PluginBase::set_allocated__loglevel(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_._loglevel_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_._loglevel_.IsDefault()) {
    _impl_._loglevel_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.PluginBase._logLevel)
}

// string _installedLocation = 4;
inline void PluginBase::clear__installedlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._installedlocation_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& PluginBase::_installedlocation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._installedLocation)
  return _internal__installedlocation();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PluginBase::set__installedlocation(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_._installedlocation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._installedLocation)
}
inline std::string* PROTOBUF_NONNULL PluginBase::mutable__installedlocation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__installedlocation();
  // @@protoc_insertion_point(field_mutable:ylg.internal.PluginBase._installedLocation)
  return _s;
}
inline const std::string& PluginBase::_internal__installedlocation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._installedlocation_.Get();
}
inline void PluginBase::_internal_set__installedlocation(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_._installedlocation_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL PluginBase::_internal_mutable__installedlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_._installedlocation_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE PluginBase::release__installedlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ylg.internal.PluginBase._installedLocation)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_._installedlocation_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_._installedlocation_.Set("", GetArena());
  }
  return released;
}
inline void PluginBase::set_allocated__installedlocation(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_._installedlocation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_._installedlocation_.IsDefault()) {
    _impl_._installedlocation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.PluginBase._installedLocation)
}

// uint64 _installedTimestamp = 5;
inline void PluginBase::clear__installedtimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._installedtimestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t PluginBase::_installedtimestamp() const {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._installedTimestamp)
  return _internal__installedtimestamp();
}
inline void PluginBase::set__installedtimestamp(::uint64_t value) {
  _internal_set__installedtimestamp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._installedTimestamp)
}
inline ::uint64_t PluginBase::_internal__installedtimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._installedtimestamp_;
}
inline void PluginBase::_internal_set__installedtimestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._installedtimestamp_ = value;
}

// uint64 _startedTimestamp = 6;
inline void PluginBase::clear__startedtimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._startedtimestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t PluginBase::_startedtimestamp() const {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._startedTimestamp)
  return _internal__startedtimestamp();
}
inline void PluginBase::set__startedtimestamp(::uint64_t value) {
  _internal_set__startedtimestamp(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._startedTimestamp)
}
inline ::uint64_t PluginBase::_internal__startedtimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._startedtimestamp_;
}
inline void PluginBase::_internal_set__startedtimestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._startedtimestamp_ = value;
}

// uint64 _runningDuration = 7;
inline void PluginBase::clear__runningduration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._runningduration_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t PluginBase::_runningduration() const {
  // @@protoc_insertion_point(field_get:ylg.internal.PluginBase._runningDuration)
  return _internal__runningduration();
}
inline void PluginBase::set__runningduration(::uint64_t value) {
  _internal_set__runningduration(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:ylg.internal.PluginBase._runningDuration)
}
inline ::uint64_t PluginBase::_internal__runningduration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._runningduration_;
}
inline void PluginBase::_internal_set__runningduration(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._runningduration_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace internal
}  // namespace ylg


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ylg::internal::AgentState> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ylg::internal::AgentState>() {
  return ::ylg::internal::AgentState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // base_2eproto_2epb_2eh
