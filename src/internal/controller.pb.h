// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_controller_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_controller_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "base.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_controller_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_controller_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_controller_2eproto;
namespace ylg {
namespace internal {
class AuthRequest;
struct AuthRequestDefaultTypeInternal;
extern AuthRequestDefaultTypeInternal _AuthRequest_default_instance_;
class AuthRespond;
struct AuthRespondDefaultTypeInternal;
extern AuthRespondDefaultTypeInternal _AuthRespond_default_instance_;
class Ping;
struct PingDefaultTypeInternal;
extern PingDefaultTypeInternal _Ping_default_instance_;
class Pong;
struct PongDefaultTypeInternal;
extern PongDefaultTypeInternal _Pong_default_instance_;
class RegisterAgentRequest;
struct RegisterAgentRequestDefaultTypeInternal;
extern RegisterAgentRequestDefaultTypeInternal _RegisterAgentRequest_default_instance_;
class RegisterAgentRespond;
struct RegisterAgentRespondDefaultTypeInternal;
extern RegisterAgentRespondDefaultTypeInternal _RegisterAgentRespond_default_instance_;
class ReportAgentState;
struct ReportAgentStateDefaultTypeInternal;
extern ReportAgentStateDefaultTypeInternal _ReportAgentState_default_instance_;
class UnregisterAgentRequest;
struct UnregisterAgentRequestDefaultTypeInternal;
extern UnregisterAgentRequestDefaultTypeInternal _UnregisterAgentRequest_default_instance_;
class UnregisterAgentRespond;
struct UnregisterAgentRespondDefaultTypeInternal;
extern UnregisterAgentRespondDefaultTypeInternal _UnregisterAgentRespond_default_instance_;
}  // namespace internal
}  // namespace ylg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ylg {
namespace internal {

// ===================================================================


// -------------------------------------------------------------------

class UnregisterAgentRespond final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.UnregisterAgentRespond) */ {
 public:
  inline UnregisterAgentRespond() : UnregisterAgentRespond(nullptr) {}
  ~UnregisterAgentRespond() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnregisterAgentRespond(::google::protobuf::internal::ConstantInitialized);

  inline UnregisterAgentRespond(const UnregisterAgentRespond& from)
      : UnregisterAgentRespond(nullptr, from) {}
  UnregisterAgentRespond(UnregisterAgentRespond&& from) noexcept
    : UnregisterAgentRespond() {
    *this = ::std::move(from);
  }

  inline UnregisterAgentRespond& operator=(const UnregisterAgentRespond& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnregisterAgentRespond& operator=(UnregisterAgentRespond&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnregisterAgentRespond& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnregisterAgentRespond* internal_default_instance() {
    return reinterpret_cast<const UnregisterAgentRespond*>(
               &_UnregisterAgentRespond_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(UnregisterAgentRespond& a, UnregisterAgentRespond& b) {
    a.Swap(&b);
  }
  inline void Swap(UnregisterAgentRespond* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnregisterAgentRespond* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnregisterAgentRespond* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnregisterAgentRespond>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnregisterAgentRespond& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnregisterAgentRespond& from) {
    UnregisterAgentRespond::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UnregisterAgentRespond* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.UnregisterAgentRespond";
  }
  protected:
  explicit UnregisterAgentRespond(::google::protobuf::Arena* arena);
  UnregisterAgentRespond(::google::protobuf::Arena* arena, const UnregisterAgentRespond& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.UnregisterAgentRespond)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class UnregisterAgentRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.UnregisterAgentRequest) */ {
 public:
  inline UnregisterAgentRequest() : UnregisterAgentRequest(nullptr) {}
  ~UnregisterAgentRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnregisterAgentRequest(::google::protobuf::internal::ConstantInitialized);

  inline UnregisterAgentRequest(const UnregisterAgentRequest& from)
      : UnregisterAgentRequest(nullptr, from) {}
  UnregisterAgentRequest(UnregisterAgentRequest&& from) noexcept
    : UnregisterAgentRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterAgentRequest& operator=(const UnregisterAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnregisterAgentRequest& operator=(UnregisterAgentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnregisterAgentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnregisterAgentRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterAgentRequest*>(
               &_UnregisterAgentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(UnregisterAgentRequest& a, UnregisterAgentRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnregisterAgentRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnregisterAgentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnregisterAgentRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnregisterAgentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnregisterAgentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnregisterAgentRequest& from) {
    UnregisterAgentRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UnregisterAgentRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.UnregisterAgentRequest";
  }
  protected:
  explicit UnregisterAgentRequest(::google::protobuf::Arena* arena);
  UnregisterAgentRequest(::google::protobuf::Arena* arena, const UnregisterAgentRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.UnregisterAgentRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class ReportAgentState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.ReportAgentState) */ {
 public:
  inline ReportAgentState() : ReportAgentState(nullptr) {}
  ~ReportAgentState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReportAgentState(::google::protobuf::internal::ConstantInitialized);

  inline ReportAgentState(const ReportAgentState& from)
      : ReportAgentState(nullptr, from) {}
  ReportAgentState(ReportAgentState&& from) noexcept
    : ReportAgentState() {
    *this = ::std::move(from);
  }

  inline ReportAgentState& operator=(const ReportAgentState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReportAgentState& operator=(ReportAgentState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReportAgentState& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReportAgentState* internal_default_instance() {
    return reinterpret_cast<const ReportAgentState*>(
               &_ReportAgentState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ReportAgentState& a, ReportAgentState& b) {
    a.Swap(&b);
  }
  inline void Swap(ReportAgentState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReportAgentState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReportAgentState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReportAgentState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReportAgentState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReportAgentState& from) {
    ReportAgentState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReportAgentState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.ReportAgentState";
  }
  protected:
  explicit ReportAgentState(::google::protobuf::Arena* arena);
  ReportAgentState(::google::protobuf::Arena* arena, const ReportAgentState& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // .ylg.internal.AgentState _state = 2;
  void clear__state() ;
  ::ylg::internal::AgentState _state() const;
  void set__state(::ylg::internal::AgentState value);

  private:
  ::ylg::internal::AgentState _internal__state() const;
  void _internal_set__state(::ylg::internal::AgentState value);

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.ReportAgentState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    int _state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class RegisterAgentRespond final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.RegisterAgentRespond) */ {
 public:
  inline RegisterAgentRespond() : RegisterAgentRespond(nullptr) {}
  ~RegisterAgentRespond() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterAgentRespond(::google::protobuf::internal::ConstantInitialized);

  inline RegisterAgentRespond(const RegisterAgentRespond& from)
      : RegisterAgentRespond(nullptr, from) {}
  RegisterAgentRespond(RegisterAgentRespond&& from) noexcept
    : RegisterAgentRespond() {
    *this = ::std::move(from);
  }

  inline RegisterAgentRespond& operator=(const RegisterAgentRespond& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterAgentRespond& operator=(RegisterAgentRespond&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterAgentRespond& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterAgentRespond* internal_default_instance() {
    return reinterpret_cast<const RegisterAgentRespond*>(
               &_RegisterAgentRespond_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RegisterAgentRespond& a, RegisterAgentRespond& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterAgentRespond* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterAgentRespond* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterAgentRespond* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterAgentRespond>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterAgentRespond& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterAgentRespond& from) {
    RegisterAgentRespond::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterAgentRespond* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.RegisterAgentRespond";
  }
  protected:
  explicit RegisterAgentRespond(::google::protobuf::Arena* arena);
  RegisterAgentRespond(::google::protobuf::Arena* arena, const RegisterAgentRespond& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.RegisterAgentRespond)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class RegisterAgentRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.RegisterAgentRequest) */ {
 public:
  inline RegisterAgentRequest() : RegisterAgentRequest(nullptr) {}
  ~RegisterAgentRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterAgentRequest(::google::protobuf::internal::ConstantInitialized);

  inline RegisterAgentRequest(const RegisterAgentRequest& from)
      : RegisterAgentRequest(nullptr, from) {}
  RegisterAgentRequest(RegisterAgentRequest&& from) noexcept
    : RegisterAgentRequest() {
    *this = ::std::move(from);
  }

  inline RegisterAgentRequest& operator=(const RegisterAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterAgentRequest& operator=(RegisterAgentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterAgentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterAgentRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterAgentRequest*>(
               &_RegisterAgentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RegisterAgentRequest& a, RegisterAgentRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterAgentRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterAgentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterAgentRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterAgentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterAgentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterAgentRequest& from) {
    RegisterAgentRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterAgentRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.RegisterAgentRequest";
  }
  protected:
  explicit RegisterAgentRequest(::google::protobuf::Arena* arena);
  RegisterAgentRequest(::google::protobuf::Arena* arena, const RegisterAgentRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kMacFieldNumber = 2,
    kNetDevNameFieldNumber = 3,
    kMachineIDFieldNumber = 4,
    kHostNameFieldNumber = 5,
  };
  // string _ip = 1;
  void clear__ip() ;
  const std::string& _ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__ip(Arg_&& arg, Args_... args);
  std::string* mutable__ip();
  PROTOBUF_NODISCARD std::string* release__ip();
  void set_allocated__ip(std::string* value);

  private:
  const std::string& _internal__ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__ip(
      const std::string& value);
  std::string* _internal_mutable__ip();

  public:
  // string _mac = 2;
  void clear__mac() ;
  const std::string& _mac() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__mac(Arg_&& arg, Args_... args);
  std::string* mutable__mac();
  PROTOBUF_NODISCARD std::string* release__mac();
  void set_allocated__mac(std::string* value);

  private:
  const std::string& _internal__mac() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__mac(
      const std::string& value);
  std::string* _internal_mutable__mac();

  public:
  // string _netDevName = 3;
  void clear__netdevname() ;
  const std::string& _netdevname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__netdevname(Arg_&& arg, Args_... args);
  std::string* mutable__netdevname();
  PROTOBUF_NODISCARD std::string* release__netdevname();
  void set_allocated__netdevname(std::string* value);

  private:
  const std::string& _internal__netdevname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__netdevname(
      const std::string& value);
  std::string* _internal_mutable__netdevname();

  public:
  // string _machineID = 4;
  void clear__machineid() ;
  const std::string& _machineid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__machineid(Arg_&& arg, Args_... args);
  std::string* mutable__machineid();
  PROTOBUF_NODISCARD std::string* release__machineid();
  void set_allocated__machineid(std::string* value);

  private:
  const std::string& _internal__machineid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__machineid(
      const std::string& value);
  std::string* _internal_mutable__machineid();

  public:
  // string _hostName = 5;
  void clear__hostname() ;
  const std::string& _hostname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__hostname(Arg_&& arg, Args_... args);
  std::string* mutable__hostname();
  PROTOBUF_NODISCARD std::string* release__hostname();
  void set_allocated__hostname(std::string* value);

  private:
  const std::string& _internal__hostname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__hostname(
      const std::string& value);
  std::string* _internal_mutable__hostname();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.RegisterAgentRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      79, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _ip_;
    ::google::protobuf::internal::ArenaStringPtr _mac_;
    ::google::protobuf::internal::ArenaStringPtr _netdevname_;
    ::google::protobuf::internal::ArenaStringPtr _machineid_;
    ::google::protobuf::internal::ArenaStringPtr _hostname_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class Pong final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.Pong) */ {
 public:
  inline Pong() : Pong(nullptr) {}
  ~Pong() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Pong(::google::protobuf::internal::ConstantInitialized);

  inline Pong(const Pong& from)
      : Pong(nullptr, from) {}
  Pong(Pong&& from) noexcept
    : Pong() {
    *this = ::std::move(from);
  }

  inline Pong& operator=(const Pong& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pong& operator=(Pong&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pong& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pong* internal_default_instance() {
    return reinterpret_cast<const Pong*>(
               &_Pong_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Pong& a, Pong& b) {
    a.Swap(&b);
  }
  inline void Swap(Pong* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pong* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pong* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pong>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pong& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Pong& from) {
    Pong::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pong* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.Pong";
  }
  protected:
  explicit Pong(::google::protobuf::Arena* arena);
  Pong(::google::protobuf::Arena* arena, const Pong& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
    kMsgFieldNumber = 2,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // string _msg = 2;
  void clear__msg() ;
  const std::string& _msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__msg(Arg_&& arg, Args_... args);
  std::string* mutable__msg();
  PROTOBUF_NODISCARD std::string* release__msg();
  void set_allocated__msg(std::string* value);

  private:
  const std::string& _internal__msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__msg(
      const std::string& value);
  std::string* _internal_mutable__msg();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.Pong)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    ::google::protobuf::internal::ArenaStringPtr _msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class Ping final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.Ping) */ {
 public:
  inline Ping() : Ping(nullptr) {}
  ~Ping() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Ping(::google::protobuf::internal::ConstantInitialized);

  inline Ping(const Ping& from)
      : Ping(nullptr, from) {}
  Ping(Ping&& from) noexcept
    : Ping() {
    *this = ::std::move(from);
  }

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ping& operator=(Ping&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ping& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ping* internal_default_instance() {
    return reinterpret_cast<const Ping*>(
               &_Ping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Ping& a, Ping& b) {
    a.Swap(&b);
  }
  inline void Swap(Ping* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ping* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ping* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Ping>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Ping& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Ping& from) {
    Ping::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Ping* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.Ping";
  }
  protected:
  explicit Ping(::google::protobuf::Arena* arena);
  Ping(::google::protobuf::Arena* arena, const Ping& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // string _msg = 1;
  void clear__msg() ;
  const std::string& _msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__msg(Arg_&& arg, Args_... args);
  std::string* mutable__msg();
  PROTOBUF_NODISCARD std::string* release__msg();
  void set_allocated__msg(std::string* value);

  private:
  const std::string& _internal__msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__msg(
      const std::string& value);
  std::string* _internal_mutable__msg();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.Ping)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class AuthRespond final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.AuthRespond) */ {
 public:
  inline AuthRespond() : AuthRespond(nullptr) {}
  ~AuthRespond() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthRespond(::google::protobuf::internal::ConstantInitialized);

  inline AuthRespond(const AuthRespond& from)
      : AuthRespond(nullptr, from) {}
  AuthRespond(AuthRespond&& from) noexcept
    : AuthRespond() {
    *this = ::std::move(from);
  }

  inline AuthRespond& operator=(const AuthRespond& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthRespond& operator=(AuthRespond&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthRespond& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthRespond* internal_default_instance() {
    return reinterpret_cast<const AuthRespond*>(
               &_AuthRespond_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AuthRespond& a, AuthRespond& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthRespond* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthRespond* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthRespond* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthRespond>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthRespond& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthRespond& from) {
    AuthRespond::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthRespond* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.AuthRespond";
  }
  protected:
  explicit AuthRespond(::google::protobuf::Arena* arena);
  AuthRespond(::google::protobuf::Arena* arena, const AuthRespond& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.AuthRespond)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};// -------------------------------------------------------------------

class AuthRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ylg.internal.AuthRequest) */ {
 public:
  inline AuthRequest() : AuthRequest(nullptr) {}
  ~AuthRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthRequest(::google::protobuf::internal::ConstantInitialized);

  inline AuthRequest(const AuthRequest& from)
      : AuthRequest(nullptr, from) {}
  AuthRequest(AuthRequest&& from) noexcept
    : AuthRequest() {
    *this = ::std::move(from);
  }

  inline AuthRequest& operator=(const AuthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthRequest& operator=(AuthRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthRequest* internal_default_instance() {
    return reinterpret_cast<const AuthRequest*>(
               &_AuthRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AuthRequest& a, AuthRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthRequest& from) {
    AuthRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ylg.internal.AuthRequest";
  }
  protected:
  explicit AuthRequest(::google::protobuf::Arena* arena);
  AuthRequest(::google::protobuf::Arena* arena, const AuthRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIDFieldNumber = 1,
  };
  // string _agentID = 1;
  void clear__agentid() ;
  const std::string& _agentid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set__agentid(Arg_&& arg, Args_... args);
  std::string* mutable__agentid();
  PROTOBUF_NODISCARD std::string* release__agentid();
  void set_allocated__agentid(std::string* value);

  private:
  const std::string& _internal__agentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set__agentid(
      const std::string& value);
  std::string* _internal_mutable__agentid();

  public:
  // @@protoc_insertion_point(class_scope:ylg.internal.AuthRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr _agentid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Ping

// string _msg = 1;
inline void Ping::clear__msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._msg_.ClearToEmpty();
}
inline const std::string& Ping::_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.Ping._msg)
  return _internal__msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Ping::set__msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.Ping._msg)
}
inline std::string* Ping::mutable__msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__msg();
  // @@protoc_insertion_point(field_mutable:ylg.internal.Ping._msg)
  return _s;
}
inline const std::string& Ping::_internal__msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._msg_.Get();
}
inline void Ping::_internal_set__msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._msg_.Set(value, GetArena());
}
inline std::string* Ping::_internal_mutable__msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._msg_.Mutable( GetArena());
}
inline std::string* Ping::release__msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.Ping._msg)
  return _impl_._msg_.Release();
}
inline void Ping::set_allocated__msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._msg_.IsDefault()) {
          _impl_._msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.Ping._msg)
}

// -------------------------------------------------------------------

// Pong

// string _agentID = 1;
inline void Pong::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& Pong::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.Pong._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Pong::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.Pong._agentID)
}
inline std::string* Pong::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.Pong._agentID)
  return _s;
}
inline const std::string& Pong::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void Pong::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* Pong::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* Pong::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.Pong._agentID)
  return _impl_._agentid_.Release();
}
inline void Pong::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.Pong._agentID)
}

// string _msg = 2;
inline void Pong::clear__msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._msg_.ClearToEmpty();
}
inline const std::string& Pong::_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.Pong._msg)
  return _internal__msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Pong::set__msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.Pong._msg)
}
inline std::string* Pong::mutable__msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__msg();
  // @@protoc_insertion_point(field_mutable:ylg.internal.Pong._msg)
  return _s;
}
inline const std::string& Pong::_internal__msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._msg_.Get();
}
inline void Pong::_internal_set__msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._msg_.Set(value, GetArena());
}
inline std::string* Pong::_internal_mutable__msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._msg_.Mutable( GetArena());
}
inline std::string* Pong::release__msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.Pong._msg)
  return _impl_._msg_.Release();
}
inline void Pong::set_allocated__msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._msg_.IsDefault()) {
          _impl_._msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.Pong._msg)
}

// -------------------------------------------------------------------

// AuthRequest

// string _agentID = 1;
inline void AuthRequest::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& AuthRequest::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.AuthRequest._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthRequest::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.AuthRequest._agentID)
}
inline std::string* AuthRequest::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.AuthRequest._agentID)
  return _s;
}
inline const std::string& AuthRequest::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void AuthRequest::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* AuthRequest::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* AuthRequest::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.AuthRequest._agentID)
  return _impl_._agentid_.Release();
}
inline void AuthRequest::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.AuthRequest._agentID)
}

// -------------------------------------------------------------------

// AuthRespond

// string _agentID = 1;
inline void AuthRespond::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& AuthRespond::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.AuthRespond._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthRespond::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.AuthRespond._agentID)
}
inline std::string* AuthRespond::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.AuthRespond._agentID)
  return _s;
}
inline const std::string& AuthRespond::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void AuthRespond::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* AuthRespond::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* AuthRespond::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.AuthRespond._agentID)
  return _impl_._agentid_.Release();
}
inline void AuthRespond::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.AuthRespond._agentID)
}

// -------------------------------------------------------------------

// RegisterAgentRequest

// string _ip = 1;
inline void RegisterAgentRequest::clear__ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._ip_.ClearToEmpty();
}
inline const std::string& RegisterAgentRequest::_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.RegisterAgentRequest._ip)
  return _internal__ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterAgentRequest::set__ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.RegisterAgentRequest._ip)
}
inline std::string* RegisterAgentRequest::mutable__ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__ip();
  // @@protoc_insertion_point(field_mutable:ylg.internal.RegisterAgentRequest._ip)
  return _s;
}
inline const std::string& RegisterAgentRequest::_internal__ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._ip_.Get();
}
inline void RegisterAgentRequest::_internal_set__ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._ip_.Set(value, GetArena());
}
inline std::string* RegisterAgentRequest::_internal_mutable__ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._ip_.Mutable( GetArena());
}
inline std::string* RegisterAgentRequest::release__ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.RegisterAgentRequest._ip)
  return _impl_._ip_.Release();
}
inline void RegisterAgentRequest::set_allocated__ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._ip_.IsDefault()) {
          _impl_._ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.RegisterAgentRequest._ip)
}

// string _mac = 2;
inline void RegisterAgentRequest::clear__mac() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._mac_.ClearToEmpty();
}
inline const std::string& RegisterAgentRequest::_mac() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.RegisterAgentRequest._mac)
  return _internal__mac();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterAgentRequest::set__mac(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._mac_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.RegisterAgentRequest._mac)
}
inline std::string* RegisterAgentRequest::mutable__mac() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__mac();
  // @@protoc_insertion_point(field_mutable:ylg.internal.RegisterAgentRequest._mac)
  return _s;
}
inline const std::string& RegisterAgentRequest::_internal__mac() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._mac_.Get();
}
inline void RegisterAgentRequest::_internal_set__mac(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._mac_.Set(value, GetArena());
}
inline std::string* RegisterAgentRequest::_internal_mutable__mac() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._mac_.Mutable( GetArena());
}
inline std::string* RegisterAgentRequest::release__mac() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.RegisterAgentRequest._mac)
  return _impl_._mac_.Release();
}
inline void RegisterAgentRequest::set_allocated__mac(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._mac_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._mac_.IsDefault()) {
          _impl_._mac_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.RegisterAgentRequest._mac)
}

// string _netDevName = 3;
inline void RegisterAgentRequest::clear__netdevname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._netdevname_.ClearToEmpty();
}
inline const std::string& RegisterAgentRequest::_netdevname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.RegisterAgentRequest._netDevName)
  return _internal__netdevname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterAgentRequest::set__netdevname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._netdevname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.RegisterAgentRequest._netDevName)
}
inline std::string* RegisterAgentRequest::mutable__netdevname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__netdevname();
  // @@protoc_insertion_point(field_mutable:ylg.internal.RegisterAgentRequest._netDevName)
  return _s;
}
inline const std::string& RegisterAgentRequest::_internal__netdevname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._netdevname_.Get();
}
inline void RegisterAgentRequest::_internal_set__netdevname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._netdevname_.Set(value, GetArena());
}
inline std::string* RegisterAgentRequest::_internal_mutable__netdevname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._netdevname_.Mutable( GetArena());
}
inline std::string* RegisterAgentRequest::release__netdevname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.RegisterAgentRequest._netDevName)
  return _impl_._netdevname_.Release();
}
inline void RegisterAgentRequest::set_allocated__netdevname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._netdevname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._netdevname_.IsDefault()) {
          _impl_._netdevname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.RegisterAgentRequest._netDevName)
}

// string _machineID = 4;
inline void RegisterAgentRequest::clear__machineid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._machineid_.ClearToEmpty();
}
inline const std::string& RegisterAgentRequest::_machineid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.RegisterAgentRequest._machineID)
  return _internal__machineid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterAgentRequest::set__machineid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._machineid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.RegisterAgentRequest._machineID)
}
inline std::string* RegisterAgentRequest::mutable__machineid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__machineid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.RegisterAgentRequest._machineID)
  return _s;
}
inline const std::string& RegisterAgentRequest::_internal__machineid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._machineid_.Get();
}
inline void RegisterAgentRequest::_internal_set__machineid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._machineid_.Set(value, GetArena());
}
inline std::string* RegisterAgentRequest::_internal_mutable__machineid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._machineid_.Mutable( GetArena());
}
inline std::string* RegisterAgentRequest::release__machineid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.RegisterAgentRequest._machineID)
  return _impl_._machineid_.Release();
}
inline void RegisterAgentRequest::set_allocated__machineid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._machineid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._machineid_.IsDefault()) {
          _impl_._machineid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.RegisterAgentRequest._machineID)
}

// string _hostName = 5;
inline void RegisterAgentRequest::clear__hostname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._hostname_.ClearToEmpty();
}
inline const std::string& RegisterAgentRequest::_hostname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.RegisterAgentRequest._hostName)
  return _internal__hostname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterAgentRequest::set__hostname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._hostname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.RegisterAgentRequest._hostName)
}
inline std::string* RegisterAgentRequest::mutable__hostname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__hostname();
  // @@protoc_insertion_point(field_mutable:ylg.internal.RegisterAgentRequest._hostName)
  return _s;
}
inline const std::string& RegisterAgentRequest::_internal__hostname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._hostname_.Get();
}
inline void RegisterAgentRequest::_internal_set__hostname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._hostname_.Set(value, GetArena());
}
inline std::string* RegisterAgentRequest::_internal_mutable__hostname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._hostname_.Mutable( GetArena());
}
inline std::string* RegisterAgentRequest::release__hostname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.RegisterAgentRequest._hostName)
  return _impl_._hostname_.Release();
}
inline void RegisterAgentRequest::set_allocated__hostname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._hostname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._hostname_.IsDefault()) {
          _impl_._hostname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.RegisterAgentRequest._hostName)
}

// -------------------------------------------------------------------

// RegisterAgentRespond

// string _agentID = 1;
inline void RegisterAgentRespond::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& RegisterAgentRespond::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.RegisterAgentRespond._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterAgentRespond::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.RegisterAgentRespond._agentID)
}
inline std::string* RegisterAgentRespond::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.RegisterAgentRespond._agentID)
  return _s;
}
inline const std::string& RegisterAgentRespond::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void RegisterAgentRespond::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* RegisterAgentRespond::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* RegisterAgentRespond::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.RegisterAgentRespond._agentID)
  return _impl_._agentid_.Release();
}
inline void RegisterAgentRespond::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.RegisterAgentRespond._agentID)
}

// -------------------------------------------------------------------

// UnregisterAgentRequest

// string _agentID = 1;
inline void UnregisterAgentRequest::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& UnregisterAgentRequest::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.UnregisterAgentRequest._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterAgentRequest::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.UnregisterAgentRequest._agentID)
}
inline std::string* UnregisterAgentRequest::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.UnregisterAgentRequest._agentID)
  return _s;
}
inline const std::string& UnregisterAgentRequest::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void UnregisterAgentRequest::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* UnregisterAgentRequest::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* UnregisterAgentRequest::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.UnregisterAgentRequest._agentID)
  return _impl_._agentid_.Release();
}
inline void UnregisterAgentRequest::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.UnregisterAgentRequest._agentID)
}

// -------------------------------------------------------------------

// UnregisterAgentRespond

// string _agentID = 1;
inline void UnregisterAgentRespond::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& UnregisterAgentRespond::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.UnregisterAgentRespond._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterAgentRespond::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.UnregisterAgentRespond._agentID)
}
inline std::string* UnregisterAgentRespond::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.UnregisterAgentRespond._agentID)
  return _s;
}
inline const std::string& UnregisterAgentRespond::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void UnregisterAgentRespond::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* UnregisterAgentRespond::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* UnregisterAgentRespond::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.UnregisterAgentRespond._agentID)
  return _impl_._agentid_.Release();
}
inline void UnregisterAgentRespond::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.UnregisterAgentRespond._agentID)
}

// -------------------------------------------------------------------

// ReportAgentState

// string _agentID = 1;
inline void ReportAgentState::clear__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.ClearToEmpty();
}
inline const std::string& ReportAgentState::_agentid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ylg.internal.ReportAgentState._agentID)
  return _internal__agentid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReportAgentState::set__agentid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ylg.internal.ReportAgentState._agentID)
}
inline std::string* ReportAgentState::mutable__agentid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable__agentid();
  // @@protoc_insertion_point(field_mutable:ylg.internal.ReportAgentState._agentID)
  return _s;
}
inline const std::string& ReportAgentState::_internal__agentid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_._agentid_.Get();
}
inline void ReportAgentState::_internal_set__agentid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._agentid_.Set(value, GetArena());
}
inline std::string* ReportAgentState::_internal_mutable__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_._agentid_.Mutable( GetArena());
}
inline std::string* ReportAgentState::release__agentid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ylg.internal.ReportAgentState._agentID)
  return _impl_._agentid_.Release();
}
inline void ReportAgentState::set_allocated__agentid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._agentid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_._agentid_.IsDefault()) {
          _impl_._agentid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ylg.internal.ReportAgentState._agentID)
}

// .ylg.internal.AgentState _state = 2;
inline void ReportAgentState::clear__state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._state_ = 0;
}
inline ::ylg::internal::AgentState ReportAgentState::_state() const {
  // @@protoc_insertion_point(field_get:ylg.internal.ReportAgentState._state)
  return _internal__state();
}
inline void ReportAgentState::set__state(::ylg::internal::AgentState value) {
  _internal_set__state(value);
  // @@protoc_insertion_point(field_set:ylg.internal.ReportAgentState._state)
}
inline ::ylg::internal::AgentState ReportAgentState::_internal__state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ylg::internal::AgentState>(_impl_._state_);
}
inline void ReportAgentState::_internal_set__state(::ylg::internal::AgentState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_._state_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace internal
}  // namespace ylg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_controller_2eproto_2epb_2eh
